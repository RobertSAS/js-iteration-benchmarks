"use strict";(self.webpackChunkbenchmarking=self.webpackChunkbenchmarking||[]).push([[387],{1387:(E,y,e)=>{e.r(y),e.d(y,{ArrayCombinationComponent:()=>B});var v=e(6895),d=e(8401),C=e(2805),c=e(6623),f=e(8492),b=e(4825),h=e(4177),g=f.Z?f.Z.isConcatSpreadable:void 0;const T=function Z(r){return(0,h.Z)(r)||(0,b.Z)(r)||!!(g&&r&&r[g])},F=function i(r,n,a,t,o){var p=-1,D=r.length;for(a||(a=T),o||(o=[]);++p<D;){var l=r[p];n>0&&a(l)?n>1?i(l,n-1,a,t,o):(0,c.Z)(o,l):t||(o[o.length]=l)}return o},z=function x(r,n){var a=-1,t=r.length;for(n||(n=Array(t));++a<t;)n[a]=r[a];return n},u=function R(){var r=arguments.length;if(!r)return[];for(var n=Array(r-1),a=arguments[0],t=r;t--;)n[t-1]=arguments[t];return(0,c.Z)((0,h.Z)(a)?z(a):[a],F(n,1))},S={"spread operator":r=>5===r.length?[...r[0],...r[1],...r[2],...r[3],...r[4]]:[...r[0],...r[1]],"lodash concat":r=>5===r.length?u(r[0],r[1],r[2],r[3],r[4]):u(r[0],r[1]),"array concat":r=>5===r.length?r[0].concat(r[1],r[2],r[3],r[4]):r[0].concat(r[1])},A={};var s=e(7489);const j={arrayTests:{"small (3 items)":{values:[[1,2,3,4],[5,6,7,8]],result:[1,2,3,4,5,6,7,8]},"big (10000 items)":{values:[Array.from({length:1e4}).map((r,n)=>n),Array.from({length:1e4}).map((r,n)=>n)],result:(0,s.concat)(Array.from({length:1e4}).map((r,n)=>n),Array.from({length:1e4}).map((r,n)=>n))},"5 big arrays":{values:[Array.from({length:1e4}).map((r,n)=>n),Array.from({length:1e4}).map((r,n)=>n),Array.from({length:1e4}).map((r,n)=>n),Array.from({length:1e4}).map((r,n)=>n),Array.from({length:1e4}).map((r,n)=>n)],result:(0,s.concat)(Array.from({length:1e4}).map((r,n)=>n),Array.from({length:1e4}).map((r,n)=>n),Array.from({length:1e4}).map((r,n)=>n),Array.from({length:1e4}).map((r,n)=>n),Array.from({length:1e4}).map((r,n)=>n))},"5 small arrays":{values:[Array.from({length:3}).map((r,n)=>n),Array.from({length:3}).map((r,n)=>n),Array.from({length:3}).map((r,n)=>n),Array.from({length:3}).map((r,n)=>n),Array.from({length:3}).map((r,n)=>n)],result:(0,s.concat)(Array.from({length:3}).map((r,n)=>n),Array.from({length:3}).map((r,n)=>n),Array.from({length:3}).map((r,n)=>n),Array.from({length:3}).map((r,n)=>n),Array.from({length:3}).map((r,n)=>n))}}};var m=e(8256);let B=(()=>{class r{constructor(){this.results=A,(0,d.AB)(A,S,j.arrayTests)}runTest(a,t){a(t)}}return r.\u0275fac=function(a){return new(a||r)},r.\u0275cmp=m.Xpm({type:r,selectors:[["app-array-combination"]],standalone:!0,features:[m.jDz],decls:1,vars:4,consts:[[3,"results","summary","runTest","title"]],template:function(a,t){1&a&&m._UZ(0,"app-test-runner",0),2&a&&m.Q6J("results",t.results)("summary","array.concat is faster for many large arrays; spread is faster with small arrays")("runTest",t.runTest)("title","Array combination")},dependencies:[v.ez,C.g],encapsulation:2}),r})()}}]);