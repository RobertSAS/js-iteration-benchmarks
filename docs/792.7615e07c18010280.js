"use strict";(self.webpackChunkbenchmarking=self.webpackChunkbenchmarking||[]).push([[792],{7792:(h,u,n)=>{n.r(u),n.d(u,{MapTestComponent:()=>f});var l=n(8401),c=n(6895),T=n(7489);const m={fastMapObjectKey:t=>(0,l.ii)(t,(e,s)=>`${s}`),lodash:t=>(0,T.map)(t,e=>`${e}`)},r={},p={objectTests:{"small (3 keys)":{values:{a:30310,b:100303,c:3040494},result:["30310","100303","3040494"]},"big (10000 keys)":{values:Array.from({length:1e4}).map((t,e)=>e).reduce((t,e)=>(t[e]=e,t),{}),result:Array.from({length:1e4}).map((t,e)=>`${e}`)}}};var i=n(2805),a=n(8256);let f=(()=>{class t{constructor(){this.results=r,console.log(r,m,p.objectTests),(0,l.AB)(r,m,p.objectTests)}runTest(s,o){s(o)}}return t.\u0275fac=function(s){return new(s||t)},t.\u0275cmp=a.Xpm({type:t,selectors:[["app-map-test"]],standalone:!0,features:[a.jDz],decls:1,vars:4,consts:[[3,"results","runTest","title","summary"]],template:function(s,o){1&s&&a._UZ(0,"app-test-runner",0),2&s&&a.Q6J("results",o.results)("runTest",o.runTest)("title","Map test")("summary","very even but custom approach is faster")},dependencies:[c.ez,i.g],encapsulation:2}),t})()}}]);